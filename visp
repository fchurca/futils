#! /bin/sh

# visp
# (c) Federico Churca-Torrusio 2016 <fchurca@fchurca.com.ar>
# See LICENSE for BSD 3-clause license

#  Open an instance of vim with a SCRATCH buffer and a connected Slimv
# Precedence order: (TODO: make configurable)
# * If running inside an interactive terminal (test -t 0):
#  * Running inside an existing screen, tmux, or other screen-ish will rely on
#    Slimv to start the server inside the same screen-ish if necessary
#  * Else, if byobu, screen, or tmux are available, start vim inside it
# * Else, we may be in an X11 session (test -n "$DISPLAY")
#  * If gvim exists, use it instead of vim. Slimv will try to start an xterm
#    for the server if necessary
#  * Else, rerun visp instead of an xterm, which is assumed to exist
# * Else, run vim as-is and pray.

# For Slimv by Tamas Kovaks, see:
# http://www.vim.org/scripts/script.php?script_id=2531

ends_with () {
	echo "$1" | grep -q "$2\$"
	return $?
}

command_exists () {
	which "$1" >/dev/null
	return $?
}

eecho () {
	echo "$1" >&2
}

PRE=''
POST=''
# Avoid creating a separate SCRATCH buffer if no file given
[ -z "$1" ] && CREATE_SCRATCH=' '
[ -z "$CREATE_SCRATCH" ] && CREATE_SCRATCH="-c 'new' "

# Create a SCRATCH buffer
PRE="$CREATE_SCRATCH-c 'file SCRATCH' -c 'set filetype=lisp' "
POST="-c 'wincmd w'"

VIM_ARGUMENTS="$PRE -c 'wincmd v' -c 'execute SlimvConnectServer()' $POST"
[ -n "$1" ] && VIM_ARGUMENTS="\"$1\" $VIM_ARGUMENTS"
VISP_COMMAND="vim $VIM_ARGUMENTS"

# shell-interactive-p
if [ -t 0 ]; then
	if [ -n "$STY" ]; then
		eecho "Trying to start visp inside of an existing screen session"
	elif [ -n "$TMUX" ]; then
		eecho "Trying to start visp inside of an existing tmux session"
	elif [ -n "$SCREEN" ]; then
		eecho "Trying to start visp inside of an existing screen-ish"
	elif command_exists byobu; then
		eecho "Trying to start visp inside of a new byobu session"
		VISP_COMMAND="byobu $VISP_COMMAND"
	elif command_exists screen; then
		eecho "Trying to start visp inside of a new screen session"
		VISP_COMMAND="screen $VISP_COMMAND"
	elif command_exists tmux; then
		eecho "Trying to start visp inside of a new tmux session"
		VISP_COMMAND="tmux $VISP_COMMAND"
	fi
	# inside-x11-p
elif [ -n "$DISPLAY" ]; then
	if command_exists gvim; then
		eecho "Trying to start visp in a gvim; Slimv will try to start an xterm"
		VISP_COMMAND="g$VISP_COMMAND"
	elif [ -z "$NESTED_VISP" ]; then
		eecho "Trying to nest another visp in xterm"
		NESTED_VISP=1
		export NESTED_VISP
		VISP_COMMAND="xterm -e $0"
	fi
else
	# nothing-available
	eecho "Trying to start visp by itself. Slimv may try to start an xterm, but it may not succeed!"
fi

eval "$VISP_COMMAND"
exit $?

